apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sierra-sync-redis-master
  namespace: sierra-sync
  labels:
    app: sierra-sync-redis
    component: master
    version: "7"
spec:
  serviceName: sierra-sync-redis-master
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: sierra-sync-redis
      component: master
  template:
    metadata:
      labels:
        app: sierra-sync-redis
        component: master
        version: "7"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: sierra-sync-redis
      securityContext:
        runAsUser: 999
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: redis
          image: redis:7-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sierra-sync-secrets
                  key: REDIS_PASSWORD
          command:
            - redis-server
            - /etc/redis/redis.conf
            - --requirepass
            - $(REDIS_PASSWORD)
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "250m"
          livenessProbe:
            exec:
              command:
                - redis-cli
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-config
              mountPath: /etc/redis
        - name: redis-exporter
          image: oliver006/redis_exporter:latest
          ports:
            - name: metrics
              containerPort: 9121
              protocol: TCP
          env:
            - name: REDIS_ADDR
              value: "redis://localhost:6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sierra-sync-secrets
                  key: REDIS_PASSWORD
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
      volumes:
        - name: redis-config
          configMap:
            name: sierra-sync-redis-config
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - sierra-sync-redis
              topologyKey: kubernetes.io/hostname
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app: sierra-sync-redis
          component: master
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: gp3-encrypted
        resources:
          requests:
            storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: sierra-sync-redis-master
  namespace: sierra-sync
  labels:
    app: sierra-sync-redis
    component: master
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
spec:
  type: ClusterIP
  ports:
    - name: redis
      port: 6379
      targetPort: redis
      protocol: TCP
    - name: metrics
      port: 9121
      targetPort: metrics
      protocol: TCP
  selector:
    app: sierra-sync-redis
    component: master

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sierra-sync-redis-sentinel
  namespace: sierra-sync
  labels:
    app: sierra-sync-redis
    component: sentinel
    version: "7"
spec:
  serviceName: sierra-sync-redis-sentinel
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: sierra-sync-redis
      component: sentinel
  template:
    metadata:
      labels:
        app: sierra-sync-redis
        component: sentinel
        version: "7"
    spec:
      serviceAccountName: sierra-sync-redis
      securityContext:
        runAsUser: 999
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: sentinel
          image: redis:7-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: sentinel
              containerPort: 26379
              protocol: TCP
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sierra-sync-secrets
                  key: REDIS_PASSWORD
          command:
            - redis-sentinel
            - /etc/redis-sentinel/sentinel.conf
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          livenessProbe:
            exec:
              command:
                - redis-cli
                - -p
                - "26379"
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - -p
                - "26379"
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: sentinel-config
              mountPath: /etc/redis-sentinel
      volumes:
        - name: sentinel-config
          configMap:
            name: redis-sentinel-config
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - sierra-sync-redis
                  - key: component
                    operator: In
                    values:
                      - sentinel
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: sierra-sync-redis-sentinel
  namespace: sierra-sync
  labels:
    app: sierra-sync-redis
    component: sentinel
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: sentinel
      port: 26379
      targetPort: sentinel
      protocol: TCP
  selector:
    app: sierra-sync-redis
    component: sentinel

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sierra-sync-redis-replica
  namespace: sierra-sync
  labels:
    app: sierra-sync-redis
    component: replica
    version: "7"
spec:
  serviceName: sierra-sync-redis-replica
  replicas: 2
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: sierra-sync-redis
      component: replica
  template:
    metadata:
      labels:
        app: sierra-sync-redis
        component: replica
        version: "7"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: sierra-sync-redis
      securityContext:
        runAsUser: 999
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: redis
          image: redis:7-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sierra-sync-secrets
                  key: REDIS_PASSWORD
          command:
            - redis-server
            - /etc/redis/redis.conf
            - --requirepass
            - $(REDIS_PASSWORD)
            - --replicaof
            - sierra-sync-redis-master
            - "6379"
            - --masterauth
            - $(REDIS_PASSWORD)
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "250m"
          livenessProbe:
            exec:
              command:
                - redis-cli
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-config
              mountPath: /etc/redis
        - name: redis-exporter
          image: oliver006/redis_exporter:latest
          ports:
            - name: metrics
              containerPort: 9121
              protocol: TCP
          env:
            - name: REDIS_ADDR
              value: "redis://localhost:6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sierra-sync-secrets
                  key: REDIS_PASSWORD
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
      volumes:
        - name: redis-config
          configMap:
            name: sierra-sync-redis-config
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - sierra-sync-redis
              topologyKey: kubernetes.io/hostname
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app: sierra-sync-redis
          component: replica
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: gp3-encrypted
        resources:
          requests:
            storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: sierra-sync-redis-replica
  namespace: sierra-sync
  labels:
    app: sierra-sync-redis
    component: replica
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
spec:
  type: ClusterIP
  ports:
    - name: redis
      port: 6379
      targetPort: redis
      protocol: TCP
    - name: metrics
      port: 9121
      targetPort: metrics
      protocol: TCP
  selector:
    app: sierra-sync-redis
    component: replica

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sierra-sync-redis
  namespace: sierra-sync
  labels:
    app: sierra-sync-redis
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/sierra-sync-redis-role

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-sentinel-config
  namespace: sierra-sync
  labels:
    app: sierra-sync-redis
    component: sentinel
data:
  sentinel.conf: |
    port 26379
    dir /tmp
    sentinel monitor mymaster sierra-sync-redis-master 6379 2
    sentinel auth-pass mymaster ${REDIS_PASSWORD}
    sentinel down-after-milliseconds mymaster 5000
    sentinel parallel-syncs mymaster 1
    sentinel failover-timeout mymaster 10000
    sentinel deny-scripts-reconfig yes
    
    # Logging
    loglevel notice
    logfile ""
    
    # Security
    bind 0.0.0.0
    protected-mode no